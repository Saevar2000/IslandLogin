using IslandLogin.Models;
using System;

namespace IslandLogin.Sample
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello World!");
            String token = "";

            IslandLogin il = new IslandLogin(token);
            bool verified = il.Verify();

            Console.WriteLine($"Verified: {verified}");
            Console.WriteLine("=============");
            Console.WriteLine($"Audience: {il.Island.Audience}");
            Console.WriteLine($"Authentication: {il.Island.Authentication}");
            Console.WriteLine($"AuthId: {il.Island.AuthId}");
            Console.WriteLine($"Destination: {il.Island.Destination}");
            Console.WriteLine($"Id: {il.Island.Id}");
            Console.WriteLine($"IPAddress: {il.Island.IPAddress}");
            Console.WriteLine($"Name: {il.Island.Name}");
            Console.WriteLine($"NotBefore: {il.Island.NotBefore}");
            Console.WriteLine($"NotOnOrAfter: {il.Island.NotOnOrAfter}");
            Console.WriteLine($"ReceiverId: {il.Island.ReceiverId}");
            Console.WriteLine($"UserAgent: {il.Island.UserAgent}");
            Console.WriteLine($"UserId: {il.Island.UserId}");

            Console.ReadKey();
        }
    }
}
