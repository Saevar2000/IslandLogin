using System;
using Xunit;

namespace IslandLogin.Tests
{
    public class IslandLoginTests
    {
        private const string Token = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48UmVzcG9uc2UgeG1sbnM6eHNkPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgSUQ9Il81NjJiMzkyZi05NGE3LTQ5M2EtOGYzMS1iZTA2YWNjMWZmNmMiIFZlcnNpb249IjIuMCIgSXNzdWVJbnN0YW50PSIyMDIwLTA3LTEyVDE2OjU2OjA2LjUzMDQyMzhaIiBEZXN0aW5hdGlvbj0iaHR0cHM6Ly9hc2RmdGVzdC5mcmVlLmJlZWNlcHRvci5jb20iIHhtbG5zPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiPjxJc3N1ZXIgeG1sbnM9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iPsOeasOzw7Bza3LDoSDDjXNsYW5kczwvSXNzdWVyPjxTaWduYXR1cmUgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPjxTaWduZWRJbmZvPjxDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvVFIvMjAwMS9SRUMteG1sLWMxNG4tMjAwMTAzMTUiIC8+PFNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNyc2Etc2hhMSIgLz48UmVmZXJlbmNlIFVSST0iIj48VHJhbnNmb3Jtcz48VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiIC8+PFRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIgLz48L1RyYW5zZm9ybXM+PERpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jI3NoYTI1NiIgLz48RGlnZXN0VmFsdWU+ZDlLUkwyb0x0Y3huYWIrdHRqVHlXakVUa0t1N2F1bjEzQk05UmtlaEZtWT08L0RpZ2VzdFZhbHVlPjwvUmVmZXJlbmNlPjwvU2lnbmVkSW5mbz48U2lnbmF0dXJlVmFsdWU+TzVLTmVKWlZ4MVNUUkdSUy9ram9HckVjb3FmQ09ybURKNWQvNTJVcFVSTlUrVjE2TlVIMFdoZllnV0oreG4rQlVqWGtvQVUwZXZhQkJ3ci81Z0d4UVNhQkNZSnVicDhKV0xMQlFwVldWZ01neXN0SlJZMTh4REZGak1RdXZObTlFcktFeG40d3ZybmJMaytFaVVTZHhHQjAzNGcvakZjRVhjdUFuQ0RQaWh2cUR0RVpmWDBvY0s1SGNpSSs5Y3B3T285bFlFaUcwdkRzR3ZoazEvd2dhV2xKdGY3RWFFeHQ4ZC9vaml1cldSVlIwM0xuWkRad0JMSkpDZjZ2TDlBendsS1ZDb013ek50N2dhNFRjSHZKcGpvQmJQRDZnR0VMWVB6YlB1NTN2M2VhVnQxTFBydjdDWnphVVJsaURpeVBSbWdzT0c0V3dXWURXcVhsc1IrNTFRPT08L1NpZ25hdHVyZVZhbHVlPjxLZXlJbmZvPjxYNTA5RGF0YT48WDUwOUNlcnRpZmljYXRlPk1JSUdERENDQlBTZ0F3SUJBZ0lDTExjd0RRWUpLb1pJaHZjTkFRRUZCUUF3Z1pJeEN6QUpCZ05WQkFZVEFrbFRNUk13RVFZRFZRUUZFd28xTWpFd01EQXlOemt3TVJZd0ZBWURWUVFLRXcxQmRXUnJaVzV1YVNCbGFHWXVNU013SVFZRFZRUUxFeHBWZEdkbFptRnVaR2tnWW5WdVlXUmhjbk5yYVd4eWFXdHFZVEVXTUJRR0ExVUVDeE1OVFdsc2JHbHphMmxzY21scmFURVpNQmNHQTFVRUF4TVFWSEpoZFhOMGRYSWdZblZ1WVdSMWNqQWVGdzB4T0RBM01ETXhOVEkwTkRoYUZ3MHlNVEEzTURNeE5USTBORGhhTUlIQ01Rc3dDUVlEVlFRR0V3SkpVekVlTUJ3R0ExVUVDZ3dWdzU1cXc3UERzSE5yY3NPaElNT05jMnhoYm1Sek1SZ3dGZ1lEVlFRTEV3OUNkVzVoWkdGeWMydHBiSEpwYTJreEpUQWpCZ05WQkFzTUhGVnVaR2x5Y21sMGRXNGdaY093WVNCaGRjT3dhMlZ1Ym1sdVp5QXhIVEFiQmdrcWhraUc5dzBCQ1FFV0RuWmxjbXRBYVhOc1lXNWtMbWx6TVJNd0VRWURWUVFGRXdvMk5UQXpOell3TmpRNU1SNHdIQVlEVlFRREV4VkpibTV6YTNKaGJtbHVaeUJKYzJ4aGJtUXVhWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzRxdG1iUExLS3dZcmdmWEJIRi90YkE0OG56Z2xOZmdzdTZmU3VkUmV3Z0R6NG8vYS9EdGRWNzlsbk4yTmRYQzVkc0EyUmlLWDFRb0loWHRwUEhrNU9tamMxSTdyZGpoUWRBQXo3Z0RXOW9xQUNIeDRDb1FyU2s2ejhCWi9lcWp1VDNFKzdFd3JBYUdmQ3dENVljMUpFbGJVSmV5dXVTSkJnSFVXeWt4N3gxRmxlbmMzK2k4aHB3OUUwWTJrdGoyQWlSZDUrQnY2V0dpN241MGMvQWtqNGJ2Y1U2ZGF2REtFYmRlVms2bFh4QWM5QnJiTlpjbzBMNmZFL3d0cXRLcTZZOXdVR2ZYL2tHZFprNXd4UitOTE9nOEJYR0tlZkxzWTg0OUpNck1zbjVBMmtEaUY4NnhnakRRWEtGZXRCc1dWNHlWOEtjaGgyenZDb3BxWmJ4blZkQWdNQkFBR2pnZ0k0TUlJQ05EQU1CZ05WSFJNQkFmOEVBakFBTUlJQkhBWURWUjBnQklJQkV6Q0NBUTh3Z2dFTEJnbGdnbUFCQWdFQkJBRXdnZjB3Z2NRR0NDc0dBUVVGQndJQ01JRzNHb0cwVkdocGN5QmpaWEowYVdacFkyRjBaU0JwY3lCcGJuUmxibVJsWkNCbWIzSWdaR2xuYVhSaGJDQnphV2R1WVhSMWNtVnpJR0Z1WkNCaGRYUm9aVzUwYVdOaGRHbHZiaTRnVkdocGN5QmpaWEowYVdacFkyRjBaU0JtZFd4bWFXeHpJSFJvWlNCeVpYRjFhWEpsYldWdWRITWdiMllnYm05eWJXRnNhWHBsWkNCalpYSjBhV1pwWTJGMFpTQndiMnhwWTNrZ0tFNURVQ2tnWkdWbWFXNWxaQ0JwYmlCRlZGTkpJRlJUSURFd01pQXdOREl1TURRR0NDc0dBUVVGQndJQkZpaG9kSFJ3T2k4dlkzQXVZWFZrYTJWdWJta3VhWE12ZEhKaGRYTjBkWEppZFc1aFpIVnlMMk53TUhNR0NDc0dBUVVGQndFQkJHY3daVEFqQmdnckJnRUZCUWN3QW9ZWGFIUjBjRG92TDI5amMzQXVZWFZrYTJWdWJta3VhWE13UGdZSFlJSmdBZ0ZqQm9ZemFIUjBjRG92TDJOa2NDNWhkV1JyWlc1dWFTNXBjeTl6YTJsc2NtbHJhUzkwY21GMWMzUjFjbUoxYm1Ga2RYSXVjRGRpTUFzR0ExVWREd1FFQXdJRjREQWZCZ05WSFNNRUdEQVdnQlJ2N05zUkxBRURheHRncnJiNGFObEFBYzJPT0RCQ0JnTlZIUjhFT3pBNU1EZWdOYUF6aGpGb2RIUndPaTh2WTNKc0xtRjFaR3RsYm01cExtbHpMM1J5WVhWemRIVnlZblZ1WVdSMWNpOXNZWFJsYzNRdVkzSnNNQjBHQTFVZERnUVdCQlN6VXlMZTRSQ1NPQklua0lCc081Rnh5dERmTWpBTkJna3Foa2lHOXcwQkFRVUZBQU9DQVFFQXZqZ25INk5tTHFzVXJ3b0dZc0wwN3cvUzR2SjlzOEpQVUxwbUlMRkI2aElLcVd2VWlKb2I3Ujlsc0xwSzJveDRlTFYvL3VyQmxEQVNJRlgxaEdjMVZ2TnVBU2g0ckNXL2pNWkdVMGp6OEptbGlsM20wMVBaNVRjYUdYWlZRbWQvOGJpTmpla2J5c0tjV3pCekNCR2RmYXZJSXZnSnhpMmhVWDNTTmVOSGlYNVdsZXIrVU96TmpIc0FtdURNZDY1bkJZemRDRnkxOERCWnZJNjZsTjAzMUZUblRuOGJoWmJ3RFpLYUZ4Rnc2SlRTaWZ1YkRqSVVSWmgySWtWTTBSMTV6eGZqdU5qNWxabDFiZmw3VFNDdjR2bHdIR1ZaWFlLVHZjalJnbmVlTGJRN3AyRU1sNi9vZDQvVGZDQjNTRy9aaUFlZzdHM2JHN1FiNW9TU0YrNFhWZz09PC9YNTA5Q2VydGlmaWNhdGU+PC9YNTA5RGF0YT48L0tleUluZm8+PC9TaWduYXR1cmU+PFN0YXR1cz48U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpTdWNjZXNzIiAvPjwvU3RhdHVzPjxBc3NlcnRpb24gVmVyc2lvbj0iMi4wIiBJRD0iXzE0YTVmNDgwLTFkNzktNGQ5YS04OGE2LTQ3MjA3MzE4NWMwZCIgSXNzdWVJbnN0YW50PSIyMDIwLTA3LTEyVDE2OjU2OjA2LjUzMDQyMzhaIiB4bWxucz0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiI+PElzc3Vlcj7DnmrDs8Owc2tyw6Egw41zbGFuZHM8L0lzc3Vlcj48U3ViamVjdD48TmFtZUlEIE5hbWVRdWFsaWZpZXI9ImlzbGFuZC5pcyI+SW5uc2tyw6FuaW5nYXLDvmrDs251c3RhPC9OYW1lSUQ+PFN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj48U3ViamVjdENvbmZpcm1hdGlvbkRhdGEgQWRkcmVzcz0iMTAuMTIxLjU3LjI1IiBOb3RPbk9yQWZ0ZXI9IjIwMjAtMDctMTJUMTc6MDY6MDYuNTMwNDIzOFoiIFJlY2lwaWVudD0iaHR0cHM6Ly9hc2RmdGVzdC5mcmVlLmJlZWNlcHRvci5jb20iIC8+PC9TdWJqZWN0Q29uZmlybWF0aW9uPjwvU3ViamVjdD48Q29uZGl0aW9ucyBOb3RCZWZvcmU9IjIwMjAtMDctMTJUMTY6NTY6MDYuNTMwNDIzOFoiIE5vdE9uT3JBZnRlcj0iMjAyMC0wNy0xMlQxNzowNjowNi41MzA0MjM4WiI+PEF1ZGllbmNlUmVzdHJpY3Rpb24+PEF1ZGllbmNlPmFzZGZ0ZXN0LmZyZWUuYmVlY2VwdG9yLmNvbTwvQXVkaWVuY2U+PC9BdWRpZW5jZVJlc3RyaWN0aW9uPjwvQ29uZGl0aW9ucz48QXV0aG5TdGF0ZW1lbnQgQXV0aG5JbnN0YW50PSIyMDIwLTA3LTEyVDE2OjU2OjA2LjUzMDQyMzhaIj48U3ViamVjdExvY2FsaXR5IEFkZHJlc3M9IjgyLjIyMS44MS42MCIgLz48QXV0aG5Db250ZXh0PjxBdXRobkNvbnRleHRDbGFzc1JlZj51cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3NlczpUTFNDbGllbnQ8L0F1dGhuQ29udGV4dENsYXNzUmVmPjwvQXV0aG5Db250ZXh0PjwvQXV0aG5TdGF0ZW1lbnQ+PEF0dHJpYnV0ZVN0YXRlbWVudD48QXR0cmlidXRlIE5hbWU9IlVzZXJTU04iIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiIEZyaWVuZGx5TmFtZT0iS2Vubml0YWxhIj48QXR0cmlidXRlVmFsdWUgeHNpOnR5cGU9InhzZDpzdHJpbmciPjQ3MDgxODA0MjA8L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjxBdHRyaWJ1dGUgTmFtZT0iTmFtZSIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDpiYXNpYyIgRnJpZW5kbHlOYW1lPSJOYWZuIj48QXR0cmlidXRlVmFsdWUgeHNpOnR5cGU9InhzZDpzdHJpbmciPkJpdGFyIGVoZi48L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjxBdHRyaWJ1dGUgTmFtZT0iQXV0aGVudGljYXRpb24iIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiIEZyaWVuZGx5TmFtZT0iQXXDsGtlbm5pbmciPjxBdHRyaWJ1dGVWYWx1ZSB4c2k6dHlwZT0ieHNkOnN0cmluZyI+UmFmcsOmbiBza2lscsOta2k8L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjxBdHRyaWJ1dGUgTmFtZT0iSVBBZGRyZXNzIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OmJhc2ljIiBGcmllbmRseU5hbWU9IklQVGFsYSI+PEF0dHJpYnV0ZVZhbHVlIHhzaTp0eXBlPSJ4c2Q6c3RyaW5nIj4xMC4xMjEuNTcuMjU8L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjxBdHRyaWJ1dGUgTmFtZT0iRGVzdGluYXRpb25TU04iIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiIEZyaWVuZGx5TmFtZT0iS2Vubml0YWxhTcOzdHRha2FuZGEiPjxBdHRyaWJ1dGVWYWx1ZSB4c2k6dHlwZT0ieHNkOnN0cmluZyI+NDcwODE4MDQyMDwvQXR0cmlidXRlVmFsdWU+PC9BdHRyaWJ1dGU+PEF0dHJpYnV0ZSBOYW1lPSJVc2VyQWdlbnQiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6YmFzaWMiIEZyaWVuZGx5TmFtZT0iTm90YW5kYVN0cmVuZ3VyIj48QXR0cmlidXRlVmFsdWUgeHNpOnR5cGU9InhzZDpzdHJpbmciPk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84My4wLjQxMDMuMTE2IFNhZmFyaS81MzcuMzY8L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjwvQXR0cmlidXRlU3RhdGVtZW50PjwvQXNzZXJ0aW9uPjwvUmVzcG9uc2U+";

        [Fact]
        public void IslandVerifyTest()
        {
            IslandLogin il = new IslandLogin(Token);
            
            // Verification is supposed to fail, the timestamps are expired.
            Assert.False(il.Verify());
        }

        [Fact]
        public void IslandVerifyTestWithManualTimestamps()
        {
            IslandLogin il = new IslandLogin(Token);
            
            // Manually set timestamps so they pass verification.
            il.Island.NotBefore = DateTime.Now.AddMinutes(-5);
            il.Island.NotOnOrAfter = DateTime.Now.AddMinutes(5);

            Assert.True(il.Verify());
        }
    }
}
